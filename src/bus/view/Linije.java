/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bus.view;

import bus.controller.Obrada;
import bus.model.Autobus;
import bus.model.Linija;
import bus.model.Lokacija;
import bus.model.Rezervacija;
import bus.pomocno.HibernateUtil;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.DateTimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Toolkit;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Matej
 */
public class Linije extends javax.swing.JFrame {

    /**
     * Creates new form Linije
     */
    DatePickerSettings dateSettings = new DatePickerSettings();
    TimePickerSettings timeSettings = new TimePickerSettings();
    DatePickerSettings dateSettings2 = new DatePickerSettings();
    TimePickerSettings timeSettings2 = new TimePickerSettings();

    static DateTimePicker dateTimePicker1;
    static DateTimePicker dateTimePicker2;

    final LocalDate today = LocalDate.now();

    private Obrada<Linija> obrada;

    public Linije() {
        initComponents();

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);

        dateSettings = new DatePickerSettings();
        timeSettings = new TimePickerSettings();
        dateSettings2 = new DatePickerSettings();
        timeSettings2 = new TimePickerSettings();
        dateSettings.setAllowEmptyDates(false);
        timeSettings.setAllowEmptyTimes(false);
        dateSettings2.setAllowEmptyDates(false);
        timeSettings2.setAllowEmptyTimes(false);

        dateTimePicker1 = new DateTimePicker(dateSettings, timeSettings);
        dateTimePicker1.setSize(pnlPolazak.getSize());
        pnlPolazak.add(dateTimePicker1);

        dateTimePicker2 = new DateTimePicker(dateSettings2, timeSettings2);
        dateTimePicker2.setSize(pnlDolazak.getSize());
        pnlDolazak.add(dateTimePicker2);

        dateTimePicker1.setLocale(new Locale("hr", "HR"));
        dateTimePicker2.setLocale(new Locale("hr", "HR"));

        napuniPolaziste();
        napuniOdrediste();
        napuniAutobuse();

        ucitajPodatke();

        obrada = new Obrada<>();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbAutobus = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbPolaziste = new javax.swing.JComboBox<>();
        cmbOdrediste = new javax.swing.JComboBox<>();
        btnLinija = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        txtCijena = new javax.swing.JTextField();
        txtUdaljenost = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pnlPolazak = new javax.swing.JPanel();
        pnlDolazak = new javax.swing.JPanel();
        btnPromjena = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Autobus");

        jLabel2.setText("Polazište");

        jLabel3.setText("Odredište");

        jLabel4.setText("Polazak");

        jLabel5.setText("Dolazak");

        jLabel6.setText("Cijena");

        jLabel7.setText("Udaljenost");

        btnLinija.setText("Nova linija");
        btnLinija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinijaActionPerformed(evt);
            }
        });

        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        jLabel8.setText("Kn");

        jLabel9.setText("Km");

        javax.swing.GroupLayout pnlPolazakLayout = new javax.swing.GroupLayout(pnlPolazak);
        pnlPolazak.setLayout(pnlPolazakLayout);
        pnlPolazakLayout.setHorizontalGroup(
            pnlPolazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlPolazakLayout.setVerticalGroup(
            pnlPolazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlDolazakLayout = new javax.swing.GroupLayout(pnlDolazak);
        pnlDolazak.setLayout(pnlDolazakLayout);
        pnlDolazakLayout.setHorizontalGroup(
            pnlDolazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlDolazakLayout.setVerticalGroup(
            pnlDolazakLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        btnPromjena.setText("Promjena linije");
        btnPromjena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjenaActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši liniju");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlDolazak, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbAutobus, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbPolaziste, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbOdrediste, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlPolazak, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLinija, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(316, 316, 316))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(315, 315, 315))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(104, 104, 104)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCijena)
                                            .addComponent(txtUdaljenost))
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(290, 290, 290))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(287, 287, 287)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(2, 2, 2))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnPromjena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmbAutobus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbPolaziste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cmbOdrediste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(pnlPolazak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(pnlDolazak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCijena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtUdaljenost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addComponent(btnLinija))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPromjena)
                    .addComponent(btnObrisi))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLinijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinijaActionPerformed
        
        if(!kontrola()){
            return;
        }
        
        Linija l = new Linija();
        l = napuniObjekt(l);
        obrada.save(l);
        ucitajPodatke();


    }//GEN-LAST:event_btnLinijaActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged

        if (evt.getValueIsAdjusting()) {
            return;
        }

        Linija l = lista.getSelectedValue();

        if (l == null) {
            return;
        }

        cmbAutobus.setSelectedItem(l.getAutobus());
        cmbPolaziste.setSelectedItem(l.getPolaziste());
        cmbOdrediste.setSelectedItem(l.getOdrediste());
        txtCijena.setText(String.valueOf(l.getCijena()));
        txtUdaljenost.setText(String.valueOf(l.getUdaljenost()));


    }//GEN-LAST:event_listaValueChanged

    private void btnPromjenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjenaActionPerformed
        Linija l = lista.getSelectedValue();

        if (l == null) {
            JOptionPane.showMessageDialog(getRootPane(), "Prvo odaberite liniju");
            return;
        }
        
        if(!kontrola()){
            return;
        }

        l = napuniObjekt(l);
        obrada.save(l);
        ucitajPodatke();
    }//GEN-LAST:event_btnPromjenaActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        Linija l = lista.getSelectedValue();
        if (l == null) {
            JOptionPane.showMessageDialog(getRootPane(), "Prvo odaberite liniju");
            return;
        }

        boolean mozeObrisati = true;

        for (Rezervacija r : l.getRezervacije()) {
            if (!r.isObrisano()) {
                mozeObrisati = false;
                break;
            }
        }

        if (!mozeObrisati) {
            JOptionPane.showMessageDialog(getParent(), "Linija se ne može obrisati jer se na njoj nalaze rezervacije");
            return;
        }
        obrada.delete(l);
        ucitajPodatke();
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void ucitajPodatke() {
        DefaultListModel<Linija> model = new DefaultListModel<>();

        List<Linija> lista = HibernateUtil.getSession().createQuery(
                "from Linija a where a.obrisano=false").list();

        for (Linija l : lista) {
            model.addElement(l);
        }

        this.lista.setModel(model);
    }

    private Linija napuniObjekt(Linija l) {

        l.setAutobus(cmbAutobus.getItemAt(cmbAutobus.getSelectedIndex()));
        l.setPolaziste(cmbPolaziste.getItemAt(cmbPolaziste.getSelectedIndex()));
        l.setOdrediste(cmbOdrediste.getItemAt(cmbOdrediste.getSelectedIndex()));
        l.setCijena(new BigDecimal(txtCijena.getText()));
        l.setUdaljenost(new BigDecimal(txtUdaljenost.getText()));

        Date d = Date.from(dateTimePicker1.getDateTimeStrict().atZone(ZoneId.systemDefault()).toInstant());
        Date d2 = Date.from(dateTimePicker2.getDateTimeStrict().atZone(ZoneId.systemDefault()).toInstant());
        l.setPolazak(d);
        l.setDolazak(d2);

        return l;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLinija;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPromjena;
    private javax.swing.JComboBox<Autobus> cmbAutobus;
    private javax.swing.JComboBox<Lokacija> cmbOdrediste;
    private javax.swing.JComboBox<Lokacija> cmbPolaziste;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Linija> lista;
    private javax.swing.JPanel pnlDolazak;
    private javax.swing.JPanel pnlPolazak;
    private javax.swing.JTextField txtCijena;
    private javax.swing.JTextField txtUdaljenost;
    // End of variables declaration//GEN-END:variables

    private void napuniAutobuse() {
        DefaultComboBoxModel<Autobus> model = new DefaultComboBoxModel<>();

        List<Autobus> lista = HibernateUtil.getSession().createQuery(
                "from Autobus a where a.obrisano=false").list();

        for (Autobus a : lista) {
            model.addElement(a);
        }

        this.cmbAutobus.setModel(model);
    }

    private void napuniPolaziste() {
        DefaultComboBoxModel<Lokacija> model = new DefaultComboBoxModel<>();

        List<Lokacija> lista = HibernateUtil.getSession().createQuery(
                "from Lokacija a where a.obrisano=false").list();

        for (Lokacija l : lista) {
            model.addElement(l);
        }

        this.cmbPolaziste.setModel(model);

    }

    private void napuniOdrediste() {
        DefaultComboBoxModel<Lokacija> model = new DefaultComboBoxModel<>();

        List<Lokacija> lista = HibernateUtil.getSession().createQuery(
                "from Lokacija a where a.obrisano=false").list();

        for (Lokacija l : lista) {
            model.addElement(l);
        }

        this.cmbOdrediste.setModel(model);
    }

    private static GridBagConstraints getConstraints(int gridx, int gridy, int gridwidth) {
        GridBagConstraints gc = new GridBagConstraints();
        gc.fill = GridBagConstraints.NONE;
        gc.anchor = GridBagConstraints.WEST;
        gc.gridx = gridx;
        gc.gridy = gridy;
        gc.gridwidth = gridwidth;
        return gc;
    }
    
    private boolean kontrola() {

        if (txtCijena.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(getRootPane(), "Obavezan broj cijene");
            return false;
        }

        if (txtUdaljenost.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(getRootPane(), "Obavezan unos udaljenosti");
            return false;
        }

        return true;
    }

}
